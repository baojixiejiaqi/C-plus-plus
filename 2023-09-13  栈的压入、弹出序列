/* class Solution 
{
  public:
    bool IsPopOrder(vector<int>& pushV, vector<int>& popV) {
        stack<int> st;

        int pushi = 0, popi = 0;
        //这个栈的顺序只要没出完 就继续
        while (pushi < pushV.size()) {
            //将遍历的栈顺序 入第二栈
            st.push(pushV[pushi++]);
            //st不能为空 且 如果相等就出栈 且 后面也一样的话 也出
            while (!st.empty() && st.top() == popV[popi]) {
                st.pop();
                popi++;
            }
        }
        return popi == popV.size();
    }
}; */
